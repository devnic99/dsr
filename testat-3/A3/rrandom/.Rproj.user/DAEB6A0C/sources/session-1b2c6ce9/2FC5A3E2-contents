library(testthat)

# Erste Funktion: describe
context("Testing describe function")

# Testfall 1: Überprüfe die Anzahl der Spalten und Zeilen
test_that("describe returns correct number of columns and rows", {
  result <- describe(data)
  expect_equal(result$num_columns, ncol(data))
  expect_equal(result$num_rows, nrow(data))
})

# Testfall 2: Überprüfe, ob alle Spalten im Ergebnis enthalten sind
test_that("describe returns information for all columns", {
  result <- describe(data)
  expect_equal(length(names(result$columns_info)), ncol(data))
})

# Testfall 3: Überprüfe, ob die Statistiken für numerische Spalten korrekt sind
test_that("describe returns correct statistics for numeric columns", {
  result <- describe(data)
  numeric_cols <- sapply(data, is.numeric)
  numeric_colnames <- names(data)[numeric_cols]
  
  for (col_name in numeric_colnames) {
    col_info <- result$columns_info[[col_name]]
    expect_true("col_stats" %in% names(col_info))
  }
})

# Testfall 4: Überprüfe, ob die Funktion für eine leere Datenframe korrekt funktioniert
test_that("describe handles empty data frame", {
  empty_data <- data.frame()
  result <- describe(empty_data)
  expect_equal(result$num_columns, 0)
  expect_equal(result$num_rows, 0)
})

# Testfall 5: Überprüfe, ob die Funktion mit fehlenden Werten umgehen kann
test_that("describe handles missing values correctly", {
  data_with_na <- data
  data_with_na$income[1:5] <- NA
  result <- describe(data_with_na)
  expect_true(all(sapply(result$columns_info$income$col_stats, is.numeric)))
})

# Zweite Funktion: has_NA
context("Testing has_NA function")

# Testfall 6: Überprüfe, ob has_NA korrekt fehlende Werte erkennt
test_that("has_NA correctly identifies missing values", {
  data_with_na <- data
  data_with_na$income[1:5] <- NA
  expect_true(has_NA(data_with_na$income))
})

# Testfall 7: Überprüfe, ob has_NA für eine Spalte ohne NA korrekt funktioniert
test_that("has_NA correctly handles column without missing values", {
  expect_false(has_NA(data$age))
})

# Testfall 8: Überprüfe, ob has_NA für eine leere Spalte korrekt funktioniert
test_that("has_NA correctly handles empty column", {
  empty_col <- numeric(0)
  expect_false(has_NA(empty_col))
})

# Testfall 9: Überprüfe, ob has_NA für einen Vektor mit NA-Werten korrekt funktioniert
test_that("has_NA correctly handles vector with missing values", {
  vector_with_na <- c(1, 2, NA, 4, 5)
  expect_true(has_NA(vector_with_na))
})

# Testfall 10: Überprüfe, ob has_NA für einen Vektor ohne NA korrekt funktioniert
test_that("has_NA correctly handles vector without missing values", {
  vector_without_na <- c(1, 2, 3, 4, 5)
  expect_false(has_NA(vector_without_na))
})
